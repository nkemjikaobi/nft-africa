import { useContext } from 'react';
import WalletContext from 'context/wallet/WalletContext';

/**
 * This is a hook to return all (functions / methods) and state variables in the wallet context provider
 * Prevents reimports and repititions of useContext and the wallet context
 * @returns 
 */
const useWallet = () => {
	const {
		//methods
		connectWallet,
		disconnectWallet,
		monitorAccountChanged,
		monitorDisconnect,
		loadContract,
		fetchAllNfts,
		fetchSingleNft,
		createNft,
		connectGuest,
		generateAuth,
		watchToken,
		verifyToken,
		fetchArdorNfts,
		mintArdorNft,
		fetchSingleArdorNft,
		resetNFTItem,
		fetchBids,
		placeArdorBid,
		fetchArdorPersonalAssets,
		fetchAuctionedNfts,
		placeEthereumBid,
		sellEthereumNft,
		fetchEthereumPersonalAssets,
		getLocation,
		addLocation,

		//state variables
		address,
		isConnected,
		balance,
		web3,
		provider,
		symbol,
		providerOptions,
		web3Modal,
		contract,
		allNfts,
		auctionedNfts,
		singleNft,
		guestWeb3,
		guestProvider,
		isGuest,
		qrCodeUrl,
		qrCodeId,
		hasGeneratedQrCodeUrl,
		ardorToken,
		ardorUserData,
		network,
		ardorNfts,
		ardorMintedData,
		singleArdorNft,
		ardorBids,
		ardorPlaceOrderData,
		ardorPersonalAssets,
		ethereumPersonalAssets,
		location,
		showLocationModal,
	} = useContext(WalletContext);

	return {
		//methods
		connectWallet,
		disconnectWallet,
		monitorAccountChanged,
		monitorDisconnect,
		loadContract,
		fetchAllNfts,
		fetchSingleNft,
		createNft,
		connectGuest,
		generateAuth,
		watchToken,
		verifyToken,
		fetchArdorNfts,
		mintArdorNft,
		fetchSingleArdorNft,
		resetNFTItem,
		fetchBids,
		placeArdorBid,
		fetchArdorPersonalAssets,
		fetchAuctionedNfts,
		placeEthereumBid,
		sellEthereumNft,
		fetchEthereumPersonalAssets,
		getLocation,
		addLocation,

		//state variables
		address,
		isConnected,
		balance,
		web3,
		provider,
		symbol,
		providerOptions,
		web3Modal,
		contract,
		allNfts,
		auctionedNfts,
		singleNft,
		guestWeb3,
		guestProvider,
		isGuest,
		qrCodeUrl,
		qrCodeId,
		hasGeneratedQrCodeUrl,
		ardorToken,
		ardorUserData,
		network,
		ardorNfts,
		ardorMintedData,
		singleArdorNft,
		ardorBids,
		ardorPlaceOrderData,
		ardorPersonalAssets,
		ethereumPersonalAssets,
		location,
		showLocationModal,
	};
};

export default useWallet;
